<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:property-placeholder location="jdbc.properties" />
	<context:annotation-config />

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="springUnit" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
			</bean>
		</property>
	</bean>

	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!--
		enable the configuration of transactional behavior based on
		annotations
	-->
	<!--	<tx:annotation-driven transaction-manager="txManager" />-->

	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="txManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>

	<bean id="personDao" class="be.jsams.server.dao.impl.PersonDaoImpl">
		<constructor-arg value="be.jsams.server.model.Person" />
	</bean>
	<bean id="personServiceTarget" class="be.jsams.server.service.impl.PersonServiceImpl">
		<property name="personDao" ref="personDao" />
	</bean>
	<bean id="personService" parent="baseTransactionProxy">
		<property name="target" ref="personServiceTarget" />
	</bean>

	<bean id="societyDao" class="be.jsams.server.dao.impl.SocietyDaoImpl">
		<constructor-arg value="be.jsams.server.model.Society" />
	</bean>
	<bean id="societyServiceTarget" class="be.jsams.server.service.impl.SocietyServiceImpl">
		<property name="societyDao" ref="societyDao" />
	</bean>
	<bean id="societyService" parent="baseTransactionProxy">
		<property name="target" ref="societyServiceTarget" />
	</bean>

</beans>
